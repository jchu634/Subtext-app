name: Build for Windows With CUDA

on:
  push:
    branches: ["main"] 
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - debug
      skip_tests:
        description: 'Skip tests'
        required: false
        type: boolean
        default: false
      wipe_cache:
        description: 'Clean Cache after run'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  actions: write

jobs:
  build_and_package:
    runs-on: [self-hosted, Windows, gpu]
    env:
      WIPE_CACHE: ${{ github.event_name == 'push' || inputs.wipe_cache }}
    steps:
      - name: Configure Git whitespace
        run: |
          git config --global core.whitespace ""
          git config --global core.autocrlf input
          
      - uses: actions/checkout@v4
        with:
          clean: false

      - name: Fetch and overwrite key.pub
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/jchu634/Subtext-app/refs/heads/main/backend/key.pub" -OutFile "backend/key.pub"

      - name: Make Keyfile
        run: |
          echo "${{ secrets.KEY }}" > ./backend/key
      - name: Build App
        shell: pwsh
        run: .\bundleApp.ps1 -WithCuda -HardCodedPythonPath -HardCoded7ZipPath -HardCodedInnoPath
      - name: Prepare Directory Name
        id: prepare_dir
        shell: pwsh
        run: |
          $date = Get-Date -Format "yyyy.MM.dd"
          $sha = git rev-parse --short HEAD
          $dirName = "${date}-${sha}-Windows_GPU"
          echo "DIR_NAME=$dirName" >> $env:GITHUB_ENV
      - name: Copy to Local Builds Directory
        shell: pwsh
        run: |
          $targetDir = "C:\Builds\Subtext\${{ env.DIR_NAME }}"
          New-Item -Path $targetDir -ItemType Directory -Force
          Move-Item -Path "*.7z" -Destination $targetDir -ErrorAction SilentlyContinue
          Move-Item -Path "*.exe" -Destination $targetDir -ErrorAction SilentlyContinue
      - name: Cleanup Working Directory
        if: always()
        shell: pwsh
        run: |
          if ("${{ inputs.wipe_cache }}" -eq "true") {
            Remove-Item -Path "backend/home/frontend" -Recurse -Force -ErrorAction SilentlyContinue
            git clean -fdx -e "frontend/.next" -e "frontend/node_modules" -e "backend/venv"
          } else {
            git clean -fdx
          }

